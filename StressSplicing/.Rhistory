return(cbind(vect, Samp$Genotype))
})
SampDat = cbind(Samp$Genotype, SampDat)
View(SampDat)
?data.frame()
head(snp)
#Add in SNP info from Marker data CSV, beginning with column six
snp = read.csv(file = "IBM94markerset08seq.csv", header = FALSE)
snp = snp[,-(1:5)]
#testing dat 2
Samp = dat[1:33,]
SampDat = sapply(str_sub(Samp$Genotype,-3,-1), function(x){
column = which(str_sub(colnames(snp[-1,]),-3,-1) == x)
vect = data.frame(as.character(snp[,column]))
return(vect)
})
### Combining Genomes and Mo###
library(stringr)
library(tidyverse)
#testing dat 2
Samp = dat[1:33,]
SampDat = sapply(str_sub(Samp$Genotype,-3,-1), function(x){
column = which(str_sub(colnames(snp[-1,]),-3,-1) == x)
vect = data.frame(as.character(snp[,column]))
return(vect)
})
SampDat = as.data.frame(matrix(unlist(SampDat), nrow = dim(Samp)[1], byrow = TRUE))
SampDat = cbind(Samp$Genotype, SampDat)
head(SampDat)
dim(SampDat)
length(SampDat)
head(snp[-1,])
#Add in SNP info from Marker data CSV, beginning with column six
snp = read.csv(file = "IBM94markerset08seq.csv", header = TRUE)
snp = snp[,-(1:5)]
### Combining Genomes and Mo###
library(stringr)
library(tidyverse)
setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/StressSplicing")
dat = read.csv(file = "Plant_Height.csv", header = TRUE)
#Take out unneeded IBMB###, NA, B73 loci
dat = dat[-(907:938),-5]
dat = dat %>% filter(str_detect(dat$Height..in.., "N") == FALSE)
#Create Categorical Variables for PH207*Mo### and Mo### by gene breed
BreedType = ifelse(substr(dat$Genotype, 1,1)=="M", "Inbred", "Outbred")
dat = cbind(dat, BreedType)
#Add in SNP info from Marker data CSV, beginning with column six
snp = read.csv(file = "IBM94markerset08seq.csv", header = TRUE)
snp = snp[,-(1:5)]
library(data.table)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
dat.num = substrRight(as.character(dat$Genotype), 3)
snp.num = substrRight(as.character(colnames(snp)), 3)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
dat5 = rbind(snp.num,snp.new)
dat5 = transpose(dat5)
colnames(dat5) = c("Genotype")
dat6 = cbind(dat.num)
colnames(dat6) = c("Genotype")
dat7 = merge(dat6,dat5,by = "Genotype")
head(dat7[,1:10],20)
head(dat7[,11:33],20)
head(dat7[,1:10],-20)
dat2 = merge(dat6,dat5,by = "Genotype")
head(dat2[,1:10],-20)
#Running into errors beginning with colnames(dat2)#
colnames = colnames(dat2)
dim(dat2);dim(snp)
names(dat2)
head(dat2)
View(dat2)
dat2 = cbind(dat$Height,dat[,1:4],dat2)
colnames(dat2) = c(colnames(dat[1:4]),"Height",as.character(snp$markername))
dat2[1:10,1:10]
#####Adding back in the Trait info#####
dat2 = cbind(dat$Height,dat[,1:4],dat2)
length(dat$Height..in..)
length(dat2[,1])
dim(dat)
dim(dat2)
#Take out unneeded IBMB###, NA, B73 loci
dat = dat[-(907:938),-5]
dat = dat %>% filter(str_detect(dat$Height..in.., "N") == FALSE)
dim(dat)
dat = read.csv(file = "Plant_Height.csv", header = TRUE)
#Take out unneeded IBMB###, NA, B73 loci
dat = dat[-(907:938),-5]
dat = dat %>% filter(str_detect(dat$Height..in.., "N") == FALSE)
#Create Categorical Variables for PH207*Mo### and Mo### by gene breed
BreedType = ifelse(substr(dat$Genotype, 1,1)=="M", "Inbred", "Outbred")
dat = cbind(dat, BreedType)
dim(dat)
#Add in SNP info from Marker data CSV, beginning with column six
snp = read.csv(file = "IBM94markerset08seq.csv", header = TRUE)
snp = snp[,-(1:5)]
### Assigning Genotypes to Mo###
### Austin's code ###
library(data.table)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
dat.num = substrRight(as.character(dat$Genotype), 3)
head(dat.num)
snp.num = substrRight(as.character(colnames(snp)), 3)
head(snp.num)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
head(snp.new)
dat5 = rbind(snp.num,snp.new)
head(dat5)
datMatch = rbind(snp.num,snp.new)
datMatch = transpose(datMatch)
colnames(datMatch) = c("Genotype")
dat6 = cbind(dat.num)
head(dat6)
dat.num = substrRight(as.character(dat$Genotype), 3)
head(dat.num)
# creating matching Genotype columns to merge the data
colnames(datMatch) = c("Genotype")
MoNum = cbind(dat.num)
colnames(MoNum) = c("Genotype")
dat2 = merge(MoNum,datMatch,by = "Genotype")
dim(dat2)
dim(datMatch)
dim(MoNum)
?merge()
dim(dat)
names(dat)
dat[2,1044]
head(dat[2,])
dat[1044,2]
names(dat2)
dat2[1,1]
dat2[1044,1]
dat2[-1,1]
dat[-1,2]
dat = dat %>% filter(str_detect(dat$Height..in.., "B") == FALSE)
dim(dat)
dat[-1,2]
dat = dat %>% filter(str_detect(dat$Genotype, "B") == FALSE)
dim(dat)
#setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/StressSplicing")
dat = read.csv(file = "Plant_Height.csv", header = TRUE)
#Take out unneeded IBMB###, NA, B73 loci
#dat = dat[-(907:938),-5]
dat = dat %>% filter(str_detect(dat$Height..in.., "N") == FALSE)
dat = dat %>% filter(str_detect(dat$Genotype, "B") == FALSE)
dim(dat)
BreedType = ifelse(substr(dat$Genotype, 1,1)=="M", "Inbred", "Outbred")
dat = cbind(dat, BreedType)
snp = read.csv(file = "IBM94markerset08seq.csv", header = TRUE)
snp = snp[,-(1:5)]
library(data.table)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
dat.num = substrRight(as.character(dat$Genotype), 3)
snp.num = substrRight(as.character(colnames(snp)), 3)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
datMatch = rbind(snp.num,snp.new)
datMatch = transpose(datMatch)
# creating matching Genotype columns to merge the data
colnames(datMatch) = c("Genotype")
MoNum = cbind(dat.num)
colnames(MoNum) = c("Genotype")
dat2 = merge(MoNum,datMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
head(dat2[,1:10],20)
### end Austin's code ###
dim(dat2)
dim(dat)
library(stringr)
library(tidyverse)
#setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/StressSplicing")
dat = read.csv(file = "Plant_Height.csv", header = TRUE)
#Take out unneeded IBMB###, NA, B73 loci
dat = dat %>% filter(str_detect(dat$Height..in.., "N") == FALSE)
dat = dat %>% filter(str_detect(dat$Genotype, "B") == FALSE)
#Create Categorical Variables for PH207*Mo### and Mo### by gene breed
BreedType = ifelse(substr(dat$Genotype, 1,1)=="M", "Inbred", "Outbred")
dat = cbind(dat, BreedType)
#Add in SNP info from Marker data CSV, beginning with column six
snp = read.csv(file = "IBM94markerset08seq.csv", header = TRUE)
snp = snp[,-(1:5)]
### Assigning Genotypes to Mo###
### Austin's code ###
library(data.table)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
dat.num = substrRight(as.character(dat$Genotype), 3)
snp.num = substrRight(as.character(colnames(snp)), 3)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
datMatch = rbind(snp.num,snp.new)
datMatch = transpose(datMatch)
# creating matching Genotype columns to merge the data
colnames(datMatch) = c("Genotype")
MoNum = cbind(dat.num)
colnames(MoNum) = c("Genotype")
dat2 = merge(MoNum,datMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
head(dat2[,1:10],20)
dim(dat)
dim(dat2)
dim(dat.num)
length(dat.num)
length(snp.num)
length(snp.new)
dim(datMatch)
length(MoNum)
head(dat2[,1:10],20)
length(dat2[,1])
dim(dat2)
length(unique(dat.num))
length(unique(snpnum))
length(unique(snp.num))
head(dat.num)
unique(dat.num)
unique(snp.num)
head(dat.num, 30)
head(dat.num, 40)
head(dat2, 40)
head(dat2[,1:10],20)
head(dat2[,1:10],30:40)
head(dat2[,1:10],40)
head(dat2[,1:10],500)
dat2[35:48,1:10]
head(dat2[,1:10])
head(dat2[,1:10],100)
head(dat.num)
?nchar()
w =c(1,2,3)
nchar(w)
w =c("11",2,3)
nchar(w)
dat.num[30:40]
dat.num[34:40]
dat.num[33:40]
dat.num[33:49]
49-36
a = 1
a = "a"
b = "b"
c = "c"
subst(a, b, c)
substr(a, b, c)
?substr()
f = "fattie"
substr(f, -3)
substr(f, -3, nchar(f))
substr(f, nchar(f)-3+1, nchar(f))
nchar(f)
6-3+1
substr(f, 4, 6)
sample = dat[2,46]
sample
names(dat)
dat[46,2]
sample = dat[46,2]
substr(sample, nchar(sample)-3+1, nchar(sample))
samp = dat[12,2]
substr(samp, nchar(samp)-3+1, nchar(samp))
sample = "Mo010"
substr(sample, nchar(sample)-3+1, nchar(sample))
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
datMatch = rbind(snp.num,snp.new)
datMatch = transpose(datMatch)
# creating matching Genotype columns to merge the data
colnames(datMatch) = c("Genotype")
MoNum = cbind(dat.num)
colnames(MoNum) = c("Genotype")
dat2 = merge(MoNum,datMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
head(dat2[,1:10],20)
### Austin's code ###
library(data.table)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
dat.num = substrRight(as.character(dat$Genotype), 3) # Leaves out begining 0 for Mo010 and Mo039
snp.num = substrRight(as.character(colnames(snp)), 3)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
datMatch = rbind(snp.num,snp.new)
datMatch = transpose(datMatch)
# creating matching Genotype columns to merge the data
colnames(datMatch) = c("Genotype")
MoNum = cbind(dat.num)
colnames(MoNum) = c("Genotype")
dat2 = merge(MoNum,datMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
head(dat2[,1:10],20)
MoNum = cbind(dat.num)
head(MoNum)
length(MoNum)
MoNum[30:40]
dat2[30:40, 1:10]
?merge()
sample = MoNum[30:40]
colnames(sample) = c("Genotype")
dim(MoNum)
dim(sample)
head(sample)
sample =t(sample)
colnames(sample) =c("Genotype")
dim(sample)
sample = t(sample)
dim(sample)
colnames(sample) =c("Genotype")
sample.dat = merge(sample, datMatch, by = "Genotype")
sample.dat
sample.dat[,1:10]
length(sample)
dim(sample.dat)
snp.new
snp
snp.num
head(snp.new)
names(snp.new)
snp.num
snpMatch = rbind(snp.num,snp.new)
snpMatch = transpose(snpMatch)
# creating matching Genotype columns to merge the data
colnames(snpMatch) = c("Genotype")
MoNum = cbind(dat.num)
colnames(MoNum) = c("Genotype")
dat2 = merge(MoNum,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
head(dat2[,1:10],20)
unique(dat.num)
dat2 = merge(MoNum,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
head(dat2[,1:10],20)
head(dat2[,1:10],100)
dim(dat)
dim(dat2)
1507-1437
snpMatch = rbind(snp.num,snp.new)
View(snpMatch)
snpMatch = transpose(snpMatch)
View(snpMatch)
# creating matching Genotype columns to merge the data
colnames(snpMatch) = c("Genotype")
View(snpMatch)
dat2$Genotype
length(dat.num)
dim(dat2)
dim(dat)
View(MoNum)
unique(dat.num)
unique(dat.snp)
unique(snp.num)
unique(snp.new)
unique(dat.snp)
unique(dat.num)
unique(dat.snp)
unique(snp.num)
length(snp.num)
length(snp.new)
length(snpMatch
)
94*94
dat[30:40,]
dat[900:910,]
#testing the merging function
#does it move the same numbers together?
datSamp = dat[c(30:40,900:910),]
datSamp
datSamp.num = substrRight(as.character(datSamp$Genotype), 3) # Leaves out begining 0 for Mo010 and Mo039
snp.num = substrRight(as.character(colnames(snp)), 3)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
snpMatch = rbind(snp.num,snp.new)
snpMatch = transpose(snpMatch)
# creating matching Genotype columns to merge the data
colnames(snpMatch) = c("Genotype")
MoNum = cbind(datSamp.num)
colnames(MoNum) = c("Genotype")
datSamp2 = merge(MoNum,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
datSamp2
datSamp2[,1:10]
dim(datSamp2)
#testing the merging function
#does it move the same numbers together?
datSamp = dat[c(30:40,900:910),]
datSamp.num = substrRight(as.character(datSamp$Genotype), 3) # Leaves out begining 0 for Mo010 and Mo039
snp.num = substrRight(as.character(colnames(snp)), 3)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
snpMatch = rbind(snp.num,snp.new)
snpMatch = transpose(snpMatch)
# creating matching Genotype columns to merge the data
colnames(snpMatch) = c("Genotype")
MoNumSmp = cbind(datSamp.num)
colnames(MoNum) = c("Genotype")
datSamp2 = merge(MoNum,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
datSamp2[,1:10]
datSamp.num
colnames(snpMatch) = c("Genotype")
MoNumSamp = cbind(datSamp.num)
colnames(MoNumSamp) = c("Genotype")
datSamp2 = merge(MoNumSamp,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
datSamp2[,1:10]
dim(snp.new)
dim(snp.num)
dim(snp)
head(snp.num)
MoNumSamp = cbind(datSamp.num)
MoNumSamp
dim(datSamp2)
dim(snp.new)
dim(MoNumSamp)
datSamp2 = merge(MoNumSamp,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
colnames(MoNumSamp) = c("Genotype")
datSamp2 = merge(MoNumSamp,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
dim(datSamp2)
datSamp2
head(snp)
snp = snp[,c(3,5)]
snp
names(snp)
datSamp.num = substrRight(as.character(datSamp$Genotype), 3) # Leaves out begining 0 for Mo010 and Mo039
snp.num = substrRight(as.character(colnames(snp)), 3)
snp.num
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
snpMatch = rbind(snp.num,snp.new)
snpMatch = transpose(snpMatch)
# creating matching Genotype columns to merge the data
colnames(snpMatch) = c("Genotype")
MoNumSamp = cbind(datSamp.num)
colnames(MoNumSamp) = c("Genotype")
datSamp2 = merge(MoNumSamp,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
datSamp2[,1:10]
snpMatch = t(snpMatch)
# creating matching Genotype columns to merge the data
colnames(snpMatch) = c("Genotype")
MoNumSamp = cbind(datSamp.num)
colnames(MoNumSamp) = c("Genotype")
datSamp2 = merge(MoNumSamp,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
# creating matching Genotype columns to merge the data
colnames(snpMatch) = c("Genotype")
snpMatch
dim(snpMatch)
# creating matching Genotype columns to merge the data
colnames(snpMatch) = c("Genotype")
#Add in SNP info from Marker data CSV, beginning with column six
snp = read.csv(file = "IBM94markerset08seq.csv", header = TRUE)
snp = snp[,-(1:5)]
datSamp = dat[c(30:40,900:910),] #sample data only containing 007 and 010
datSamp.num = substrRight(as.character(datSamp$Genotype), 3) # Leaves out begining 0 for Mo010 and Mo039
snp.num = substrRight(as.character(colnames(snp)), 3)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
snpMatch = rbind(snp.num,snp.new)
snpMatch = t(snpMatch)
colnames(snpMatch) = c("Genotype")
MoNumSamp = cbind(datSamp.num)
colnames(MoNumSamp) = c("Genotype")
datSamp2 = merge(MoNumSamp,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
datSamp2[,1:10]
library(stringr)
library(tidyverse)
library(stringr)
library(tidyverse)
#setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/StressSplicing")
dat = read.csv(file = "Plant_Height.csv", header = TRUE)
#Take out unneeded IBMB###, NA, B73 loci
dat = dat %>% filter(str_detect(dat$Height..in.., "N") == FALSE)
dat = dat %>% filter(str_detect(dat$Genotype, "B") == FALSE)
#Create Categorical Variables for PH207*Mo### and Mo### by gene breed
BreedType = ifelse(substr(dat$Genotype, 1,1)=="M", "Inbred", "Outbred")
dat = cbind(dat, BreedType)
#Add in SNP info from Marker data CSV, beginning with column six
snp = read.csv(file = "IBM94markerset08seq.csv", header = TRUE)
snp = snp[,-(1:5)]
### Assigning Genotypes to Mo###
### Austin's code ###
library(data.table)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
dat.num = substrRight(as.character(dat$Genotype), 3) # Leaves out begining 0 for Mo010 and Mo039
snp.num = substrRight(as.character(colnames(snp)), 3)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
snpMatch = rbind(snp.num,snp.new)
snpMatch = transpose(snpMatch)
# creating matching Genotype columns to merge the data
colnames(snpMatch) = c("Genotype")
MoNum = cbind(dat.num)
colnames(MoNum) = c("Genotype")
dat2 = merge(MoNum,snpMatch,by = "Genotype") ### issue: the dim of dat2 should = MoNum when it is merged with the Genotypes (1527-1437)
head(dat2[,1:10],20)
Student = ["Jessica", "Drew", "Julia", "Michael"]
Age = [20, 24, 21, 24]
Major = ["MathStat", "Stat", "Math","Stat"]
StudentMajor= cbind(Student, Major)
colnames(StudentMajor) = c("Student", "Major")
AgeMajor = cbind(Age, Major)
colnames(AgeMajor) =c("Age", "Major")
### example for merging ###
Student = c("Jessica", "Drew", "Julia", "Michael")
Age = c(20, 24, 21, 24)
Major = c("MathStat", "Stat", "Math","Stat")
StudentMajor= cbind(Student, Major)
colnames(StudentMajor) = c("Student", "Major")
AgeMajor = cbind(Age, Major)
colnames(AgeMajor) =c("Age", "Major")
StudentMajor
AgeMajor
MajorInfo = merge(AgeMajor, StudentMajor, by = "Major")
MajorInfo
### example for merging ###
Student = c("Jessica", "Drew", "Michael","Julia")
Age = c(20, 24, 21, 24)
Major = c("MathStat", "Stat", "Math","Stat")
StudentMajor= cbind(Student, Major)
colnames(StudentMajor) = c("Student", "Major")
AgeMajor = cbind(Age, Major)
colnames(AgeMajor) =c("Age", "Major")
MajorInfo = merge(AgeMajor, StudentMajor, by = "Major")
MajorInfo
