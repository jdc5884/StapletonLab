snpMatch = rbind(snp.num,snp.new)
snpMatch = transpose(snpMatch)
# creating matching Genotype columns to merge the data
#need = c(1,5,7,8,9,10,16) #column numbers of needed variables
#dat.num = dat.num[,need]
colnames(snpMatch) = c("GenotypeNum")
#datnames =names(dat.num)
colnames(dat.num)[16] = "GenotypeNum"
dat2 = merge(dat.num,snpMatch, by.x = "GenotypeNum", by.y = "GenotypeNum",all.MoNum = all)
dat2 = dat2[order(dat2$Genotype, decreasing = FALSE),]
dat2 = dat2[,-1] #omit GenotypeNum
dat2[1:20, 1:20]
# 2018_11 plate data #
### the file in plate will come from the qPCR output including ratios ###
plate_11 = read.csv(file = "../2018_11/2018_11_withStress.csv", header = TRUE)
colnames(plate_11)[2] = "sampleID"
colnames(dat2)[4] = "sampleID"
full_11 = merge(dat2,plate_11, by = "sampleID")
#####Adding marker location and chromosome#####
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
other = as.data.frame(matrix(rep(0,2*(length(dat.num))), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
aux[1:2, 1:20]
full_11[1, 1:20]
colnames(aux) = rep("",dim(aux)[2])
colnames(full_11) = rep("",dim(aux)[2])
dat3 = rbind(aux,full_11)
full_11[1:5, 1:20]
dim(dat2)
dim(aux)
dim(plate_11)
dim(full_11)
length(dat.num)
#####Adding marker location and chromosome#####
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
dim(aux)
dim(full_11)
zeros = dim(full_11)[2]-dim(aux)[2]
zeros
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
aux[1:2, 1:20]
full_11[1, 1:20]
colnames(aux) = rep("",dim(aux)[2])
colnames(full_11) = rep("",dim(aux)[2])
dat3 = rbind(aux,full_11)
colnames(dat3) = c(names(dat), as.character(snpFull$markername))
dat3[1:10,1:10]
write.csv(dat3, file = "snpSamplingPlanNEW.csv" ,
row.names = FALSE)
dim(snpMatch)
#####Adding marker location and chromosome#####
aux = matrix(snpFull$incre_new, nrow= 1)
dim(aux)
aux = rbind(aux,snpFull$Chromosome)
dim(aux)
#creating datasets exclusively containing the last three numbers
dat.num =cbind(dat, as.integer(substrRight(as.character(dat$Genotype), 3)))
dim(dat.num)
#produces warning sign about NA's for data that is not availible for invalid Mo###
snp.num = as.integer(substrRight(as.character(colnames(snp)), 3))
dim(snp.num)
length(snp.num)
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
dim(snp.new)
snpMatch = rbind(snp.num,snp.new)
dim(snpMatch)
snpMatch = transpose(snpMatch)
# creating matching Genotype columns to merge the data
#need = c(1,5,7,8,9,10,16) #column numbers of needed variables
#dat.num = dat.num[,need]
colnames(snpMatch) = c("GenotypeNum")
#datnames =names(dat.num)
colnames(dat.num)[16] = "GenotypeNum"
#datnames =names(dat.num)
colnames(dat.num)[16] = "GenotypeNum"
# creating matching Genotype columns to merge the data
#need = c(1,5,7,8,9,10,16) #column numbers of needed variables
#dat.num = dat.num[,need]
colnames(snpMatch) = "GenotypeNum"
#datnames =names(dat.num)
colnames(dat.num)[16] = "GenotypeNum"
dat2 = merge(dat.num,snpMatch, by.x = "GenotypeNum", by.y = "GenotypeNum",all.MoNum = all)
dim(dat2)
dat2 = dat2[order(dat2$Genotype, decreasing = FALSE),]
dat2 = dat2[,-1] #omit GenotypeNum
dat2[1:20, 1:20]
# 2018_11 plate data #
### the file in plate will come from the qPCR output including ratios ###
plate_11 = read.csv(file = "../2018_11/2018_11_withStress.csv", header = TRUE)
colnames(plate_11)[2] = "sampleID"
colnames(dat2)[4] = "sampleID"
full_11 = merge(dat2,plate_11, by = "sampleID")
head(names(dat2))
head(names(dat2),20)
head(names(full_11), 20)
zeros
full_11[1:5, 1:20]
21-6
names(plate_11)
names(full_11)
names(plate_11)
head(names(dat2), 20)
full_11 = merge(plate_11, dat2 by = "sampleID")
full_11 = merge(plate_11, dat2, by = "sampleID")
write.csv(full_11, file = "2018_11vqtlInput.csv", row.names = FALSE)
head(names(full_11), 20)
head(names(full_11), 25)
#####Adding marker location and chromosome#####
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full_11)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
aux[1:2, 1:20]
full_11[1, 1:20]
colnames(aux) = rep("",dim(aux)[2])
colnames(full_11) = rep("",dim(aux)[2])
dat3 = rbind(aux,full_11)
colnames(dat3) = c(names(dat), as.character(snpFull$markername))
dat3[1:10,1:10]
write.csv(dat3, file = "snpSamplingPlanNEW.csv" ,
row.names = FALSE)
write.csv(dat3, file = "snpSamplingPlanNEW.csv" ,
row.names = FALSE)
colnames(dat3) = c(names(full_11)[1:21], as.character(snpFull$markername))
dat3[1:10,1:10]
head(names(dat3), 25)
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full_11)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
aux[1:2, 1:20]
full_11[1, 1:20]
colnames(aux) = rep("",dim(aux)[2])
colnames(full_11) = rep("",dim(aux)[2])
dat3 = rbind(aux,full_11)
colnames(dat3) = c(names(full_11)[1:21], as.character(snpFull$markername))
dat3[1:10,1:10]
write.csv(dat3, file = "snpSamplingPlanNEW.csv" ,
row.names = FALSE)
head(names(dat3), 25)
names(full_11)[1:21]
full_11[1:5, 1:20]
# 2018_11 plate data #
### the file in plate will come from the qPCR output including ratios ###
plate_11 = read.csv(file = "../2018_11/2018_11_withStress.csv", header = TRUE)
colnames(plate_11)[2] = "sampleID"
colnames(dat2)[4] = "sampleID"
full_11 = merge(plate_11, dat2, by = "sampleID")
head(names(full_11))
names(full_11)[1:21]
colnames(dat3) = c(names(full_11)[1:21], as.character(snpFull$markername))
dat3[1:10,1:10]
write.csv(dat3, file = "snpSamplingPlanNEW.csv" ,
row.names = FALSE)
full_11 = mergePlate(plate_11, dat2)
mergePlate <- function(plate, dat){
merge(plate, dat)
}
full_11 = mergePlate(plate_11, dat2)
mergePlate <- function(plate, dat){
merge(plate, dat, by = "sampleID")
}
full_11 = mergePlate(plate_11, dat2)
20*15
300+17.5*30
300+17.5*120
2400*.8
674+725
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:21], as.character(snpFull$markername))
write.csv(dat3, file = "snpSamplingPlanNEW.csv", row.names = FALSE)
}
addmarker(plate_11)
zeros
class(zeros)
addmarker(plate_11)
rep(0,2*zeros)
as.data.frame(matrix(rep(0,2*zeros), nrow = 2))
library(stringr)
library(tidyverse)
library(dplyr)
dat = read.csv(file = "../2016_Clayton/Field Book (2016) - Clayton - Sampling Plan_TIDIED.csv", header = TRUE)
#filter out the recongizable MO###
dat = dat %>% filter(str_detect(dat$Genotype, "Mo") == TRUE)
#create the breedtype category
BreedType = ifelse(substr(dat$Genotype, 1,1)=="M", "Inbred", "Hybrid")
dat = cbind(BreedType, dat)
snpFull = read.csv(file = "../IBM94markerset08seq.csv", header = TRUE)
snp = snpFull[,-(1:5)]
#############################################
### matching the Mo### to their snp Values ##
#############################################
library(data.table)
#function takes the last n characters of a string
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
#creating datasets exclusively containing the last three numbers
dat.num =cbind(dat, as.integer(substrRight(as.character(dat$Genotype), 3)))
#produces warning sign about NA's for data that is not availible for invalid Mo###
snp.num = as.integer(substrRight(as.character(colnames(snp)), 3))
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
snpMatch = rbind(snp.num,snp.new)
snpMatch = transpose(snpMatch)
# creating matching Genotype columns to merge the data
#need = c(1,5,7,8,9,10,16) #column numbers of needed variables
#dat.num = dat.num[,need]
colnames(snpMatch) = "GenotypeNum"
#datnames =names(dat.num)
colnames(dat.num)[16] = "GenotypeNum"
dat2 = merge(dat.num,snpMatch, by.x = "GenotypeNum", by.y = "GenotypeNum",all.MoNum = all)
dat2 = dat2[order(dat2$Genotype, decreasing = FALSE),]
dat2 = dat2[,-1] #omit GenotypeNum
dat2[1:20, 1:20]
########################################
######### Including plate data #########
########################################
colnames(dat2)[4] = "sampleID"
# 2018_11 plate data #
### the file in plate will come from the qPCR output including ratios ###
plate_11 = read.csv(file = "../2018_11/2018_11_withStress.csv", header = TRUE)
colnames(plate_11)[2] = "sampleID"
full_11 = merge(plate_11, dat2, by = "sampleID")
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:21], as.character(snpFull$markername))
}
addmarker(plate_11)
zeros
addmarker(full_11)
vqtl_11 = addmarker(full_11)
class(vqtl)
class(vqtl_11)
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:21], as.character(snpFull$markername))
return(dat3)
}
vqtl_11 = addmarker(full_11)
class(vqtl_11)
dim(vqtl_11)
write.csv(vqtl_11, file = "vqtlinput_11.csv" ,row.names = FALSE)
# 2018_11 plate data #
### the file in plate will come from the qPCR output including ratios ###
plate_11 = read.csv(file = "../2018_11/2018_11_withStress.csv", header = TRUE)
colnames(plate_11)[2] = "sampleID"
full_11 = merge(plate_11, dat2, by = "sampleID")
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:21], as.character(snpFull$markername))
return(dat3)
}
vqtl_11 = addmarker(full_11)
write.csv(vqtl_11, file = "vqtlinput_11.csv" ,row.names = FALSE)
library(stringr)
library(tidyverse)
library(dplyr)
#setwd(
dat = read.csv(file = "../2016_Clayton/Field Book (2016) - Clayton - Sampling Plan_TIDIED.csv", header = TRUE)
#filter out the recongizable MO###
dat = dat %>% filter(str_detect(dat$Genotype, "Mo") == TRUE)
#create the breedtype category
BreedType = ifelse(substr(dat$Genotype, 1,1)=="M", "Inbred", "Hybrid")
dat = cbind(BreedType, dat)
snpFull = read.csv(file = "../IBM94markerset08seq.csv", header = TRUE)
snp = snpFull[,-(1:5)]
#############################################
### matching the Mo### to their snp Values ##
#############################################
library(data.table)
#function takes the last n characters of a string
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
#creating datasets exclusively containing the last three numbers
dat.num =cbind(dat, as.integer(substrRight(as.character(dat$Genotype), 3)))
#produces warning sign about NA's for data that is not availible for invalid Mo###
snp.num = as.integer(substrRight(as.character(colnames(snp)), 3))
snp.new = data.frame(lapply(snp,as.character),stringsAsFactors=FALSE)
snpMatch = rbind(snp.num,snp.new)
snpMatch = transpose(snpMatch)
# creating matching Genotype columns to merge the data
#need = c(1,5,7,8,9,10,16) #column numbers of needed variables
#dat.num = dat.num[,need]
colnames(snpMatch) = "GenotypeNum"
#datnames =names(dat.num)
colnames(dat.num)[16] = "GenotypeNum"
dat2 = merge(dat.num,snpMatch, by.x = "GenotypeNum", by.y = "GenotypeNum",all.MoNum = all)
dat2 = dat2[order(dat2$Genotype, decreasing = FALSE),]
dat2 = dat2[,-1] #omit GenotypeNum
dat2[1:20, 1:20]
#write.csv(dat2, "SamplingPlan_dat2.csv")
########################################
######### Including plate data #########
########################################
colnames(dat2)[4] = "sampleID"
# 2018_11 plate data #
### the file in plate will come from the qPCR output including ratios ###
plate_11 = read.csv(file = "../2018_11/2018_11_withStress.csv", header = TRUE)
colnames(plate_11)[2] = "sampleID"
full_11 = merge(plate_11, dat2, by = "sampleID")
names(plate_11)
head(names(full_11), 20)
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:zeros], as.character(snpFull$markername))
return(dat3)
}
vqtl_11 = addmarker(full_11)
names(vqtl_11)
head(names(vqtl_11))
full
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:zeros], as.character(snpFull$markername))
return(dat3)
return(names(full)[1:zeros])
}
vqtl_11 = addmarker(full_11)
dim(vqtl_11)
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:zeros], as.character(snpFull$markername))
#return(dat3)
return(names(full)[1:zeros])
}
vqtl_11 = addmarker(full_11)
vqtl_11
length(vqtl_11)
addmarker <- function(full){
return(names(full)[1:zeros])
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:zeros], as.character(snpFull$markername))
#return(dat3)
}
vqtl_11 = addmarker(full_11)
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
return(names(full)[1:zeros])
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:zeros], as.character(snpFull$markername))
#return(dat3)
}
vqtl_11 = addmarker(full_11)
vqtl_11
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
return(names(full)[1:zeros])
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:zeros], as.character(snpFull$markername))
#return(dat3)
}
vqtl_11 = addmarker(full_11)
print(vqtl_11)
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
#colnames(dat3) = c(names(full)[1:zeros], as.character(snpFull$markername))
colnames(dat3)[1:zeros] = c(names(full)[1:zeros])
#return(dat3)
}
vqtl_11 = addmarker(full_11)
print(head(names(vqtl_11), 20)
)
print(head(names(vqtl_11), 20))
vqtl_11[1:5, 1:20]
dim(vqtl_11)
head(vqtl_11)
return(dat3)
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
#colnames(dat3) = c(names(full)[1:zeros], as.character(snpFull$markername))
colnames(dat3)[1:zeros] = c(names(full)[1:zeros])
return(dat3)
}
vqtl_11 = addmarker(full_11)
print(head(names(vqtl_11), 20))
addmarker <- function(full){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
return(names(full)[1:zeros])
dat3 = rbind(aux,full)
colnames(dat3) = c(names(full)[1:zeros], as.character(snpFull$markername))
#return(dat3)
}
vqtl_11 = addmarker(full_11)
print(head(names(vqtl_11), 20))
print(vqtl_11)
addmarker <- function(full, plate){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
fillnames = names(full)[1:zeros]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(fillnames, as.character(snpFull$markername))
#return(dat3)
}
vqtl_11 = addmarker(full_11)
print(head(names(vqtl_11), 20))
addmarker <- function(full, plate){
aux = matrix(snpFull$incre_new, nrow= 1)
aux = rbind(aux,snpFull$Chromosome)
zeros = dim(full)[2]-dim(aux)[2]
fillnames = names(full)[1:zeros]
other = as.data.frame(matrix(rep(0,2*zeros), nrow = 2)) #repeat the number of 0 as the number of variables
aux = cbind(other,aux)
colnames(aux) = rep("",dim(aux)[2])
colnames(full) = rep("",dim(aux)[2])
dat3 = rbind(aux,full)
colnames(dat3) = c(fillnames, as.character(snpFull$markername))
return(dat3)
}
vqtl_11 = addmarker(full_11)
print(head(names(vqtl_11), 20))
write.csv(vqtl_11, file = "vqtlinput_11.csv" ,row.names = FALSE)
write.csv(vqtl_11, file = "../2018_11/vqtlinput_11.csv" ,row.names = FALSE)
